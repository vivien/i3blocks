#!/bin/sh
# Copyright (C) 2012 Stefan Breunig <stefan+measure-net-speed@mathphys.fsk.uni-heidelberg.de>
# Copyright (C) 2014 kaueraal
# Copyright (C) 2015 Thiago Perrotta <perrotta dot thiago at poli dot ufrj dot br>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#------------------------------------------------------------------------

# Use the provided interface, otherwise the device used for the default route.
if [[ -n $BLOCK_INSTANCE ]]; then
  IF=$BLOCK_INSTANCE
else
  IF=$(ip route | awk '/^default/ {print $5 ; exit}')
fi

#------------------------------------------------------------------------

# As per #36 -- It is transparent: e.g. if the machine has no battery or wireless
# connection (think desktop), the corresponding block should not be displayed.
[[ ! -d "/sys/class/net/${IF}" ]] && exit

if ! [[ -e "/sys/class/net/${IF}/operstate" ]]; then
  echo "$IF down"
  exit
fi

rx1="$(cat /sys/class/net/${IF}/statistics/rx_bytes)"
tx1="$(cat /sys/class/net/${IF}/statistics/tx_bytes)"

sleep 1

rx2="$(cat /sys/class/net/${IF}/statistics/rx_bytes)"
tx2="$(cat /sys/class/net/${IF}/statistics/tx_bytes)"

# Calculate bytes transferred
rx_rate=$(( $rx2 - $rx1 ))
tx_rate=$(( $tx2 - $tx1 ))

# Unit multiplier
# 0 = B/s, 1 = KB/s, 2 = MB/s, 3 = GB/s, >3 = ERROR
rx_mult=0
tx_mult=0

# Shift by 10 bits to get Kb/s, again for Mb/s, etc...
while [[ $rx_rate -gt 1024 ]]; do
  rx_rate=$(( $rx_rate >> 10 ))
  rx_mult=$(( $rx_mult + 1 ))
done

while [[ $tx_rate -gt 1024 ]]; do
  tx_rate=$(( $tx_rate >> 10 ))
  tx_mult=$(( $tx_mult + 1 ))
done

# First argument may change the in label
case "$rx_mult" in
  0) printf "${1:-IN}" ' %sb ' "$rx_rate" ;;
  1) printf "${1:-IN}" ' %sK ' "$rx_rate" ;;
  2) printf "${1:-IN}" ' %sM ' "$rx_rate" ;;
  3) printf "${1:-IN}" ' %sG ' "$rx_rate" ;;
  *) printf 'ERROR ' ;;
esac

# Second argument may change the out label
case "$tx_mult" in
  0) printf "${2:-OUT}" ' %sb\n' "$tx_rate" ;;
  1) printf "${2:-OUT}" ' %sK\n' "$tx_rate" ;;
  2) printf "${2:-OUT}" ' %sM\n' "$tx_rate" ;;
  3) printf "${2:-OUT}" ' %sG\n' "$tx_rate" ;;
  *) printf 'ERROR\n' ;;
esac
